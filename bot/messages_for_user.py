from .utils import *
from datetime import datetime, date, timedelta

# File with messages, statuses, error messages in different languages
# for all user (super user, admins, common users, payment users)


# For TelegramBot class
# Errors and Exceptions

ERROR_WHEN_ENCAPSULATE_OBJECT = 'Something went wrong when bot try encapsulate object.'

ERROR_WHEN_TRYING_CREATE_OR_AUTHENTICATE_USER = 'Cannot determine or create account for user'

# For TelegramBot class
# Responses Statuses

ok = 'success'

# For TelegramBot class
# Messages for users

select_language = '–í—ã–±–µ—Ä–µ—Ç–µ —è–∑—ã–∫\nSelect lang'


def ru_greeting_message(chat_object):
    send_message(f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ {chat_object.username}\n'
                 f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥—É —Ç–æ–ø–æ–≤—ã—Ö —Ñ—Ä–∏–ª–∞–Ω—Å–µ—Ä–æ–≤!\n\n'
                 f'–û—Ç–ª–∏—á–Ω–æ!\n\n'
                 f'"‚úÖ –í—ã–±—Ä–∞—Ç—å –ø—Ä–æ–µ–∫—Ç" - –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã,\n'
                 f'"üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å" - –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏ –æ –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ,\n'
                 f'"üìù –ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã" - –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ–µ–∫—Ç—ã, –Ω–∞–¥ –∫–æ—Ç–æ—Ä—ã–º–∏ –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ,\n'
                 f'"‚ùì –ü–æ–º–æ—â—å" - –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ —á–∞—Ç —Å –æ–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–æ–º,\n',
                 chat_object.from_id)


def en_greeting_message(chat_object):
    send_message(f'Greeting {chat_object.username}\n\n'
                 f'Welcome to the top team freelancers!\n\n'
                 f'Excellent!\n\n'
                 f'"‚úÖ Select project" - click on this button to see available projects,\n'
                 f'"üë§ My profile" - click on this button to view your profile information,\n'
                 f'"üìù My projects" - click on this button to view the projects you are working on,\n'
                 f'"‚ùì Help" - click on this button to go to a chat with an online consultant,\n',
                 chat_object.from_id)


def ru_send_project_for_accept(chat_object, client):
    if client.hexists(f"user:{chat_object.from_id}", "project_filename"):
        filename = str(client.hget(f"user:{chat_object.from_id}", "project_filename"), 'utf-8')
    else:
        filename = '–ü—É—Å—Ç–æ.'
    send_message(f'–ù–∞–∑–≤–∞–Ω–∏–µ: {str(client.hget(f"user:{chat_object.from_id}", "project_name"), "utf-8")}\n'
                 f'–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {str(client.hget(f"user:{chat_object.from_id}", "project_category"), "utf-8")}\n'
                 f'–û–ø–∏—Å–∞–Ω–∏–µ: {str(client.hget(f"user:{chat_object.from_id}", "project_description"), "utf-8")}\n'
                 f'–°—Ä–æ–∫ –¥–æ: {str(client.hget(f"user:{chat_object.from_id}", "project_deadline"), "utf-8")}\n'
                 f'–§–∞–π–ª: {filename}\n'
                 f'–¶–µ–Ω–∞: {str(client.hget(f"user:{chat_object.from_id}", "project_cost"), "utf-8")}', chat_object.from_id)


def en_send_project_for_accept(chat_object, client):
    if client.hexists(f"user:{chat_object.from_id}", "project_filename"):
        filename = str(client.hget(f"user:{chat_object.from_id}", "project_filename"), 'utf-8')
    else:
        filename = 'Empty.'
    send_message(f'Title: {str(client.hget(f"user:{chat_object.from_id}", "project_name"), "utf-8")}\n'
                 f'Category: {str(client.hget(f"user:{chat_object.from_id}", "project_category"), "utf-8")}\n'
                 f'Description: {str(client.hget(f"user:{chat_object.from_id}", "project_description"), "utf-8")}\n'
                 f'Deadline: {str(client.hget(f"user:{chat_object.from_id}", "project_deadline"), "utf-8")}\n'
                 f'File: {filename}\n'
                 f'Cost: {str(client.hget(f"user:{chat_object.from_id}", "project_cost"), "utf-8")}', chat_object.from_id)


def ru_send_project(project):
    if project.get("filename") == 'empty':
        filename = '–ü—É—Å—Ç–æ.'
    else:
        filename = project.get("filename")
    return (f'–ù–∞–∑–≤–∞–Ω–∏–µ: {project.get("title")}\n'
            f'–ö–∞—Ç–µ–≥–æ—Ä–∏—è {project.get("category")}\n'
            f'–û–ø–∏—Å–∞–Ω–∏–µ: {project.get("description")}\n'
            f'–°—Ä–æ–∫ –¥–æ: {project.get("deadline").strftime("%d.%m.%Y")}\n'
            f'–§–∞–π–ª: {filename}\n'
            f'–¶–µ–Ω–∞: {project.get("cost")}\n')


def en_send_project(project):
    if project.get("filename") == 'empty':
        filename = 'Empty.'
    else:
        filename = project.get("filename")
    return (f'Name: {project.get("title")}\n'
            f'Category {project.get("category")}\n'
            f'Description: {project.get("description")}\n'
            f'Deadline: {project.get("deadline").strftime("%d.%m.%Y")}\n'
            f'File: {filename}\n'
            f'Cost: {project.get("cost")}\n')


def ru_that_was_last_project(chat_object):
    send_message('–≠—Ç–æ –±—ã–ª–æ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ.', chat_object.from_id)


def en_that_was_last_project(chat_object):
    send_message('That was last project.', chat_object.from_id)


def ru_send_his_project(chat_object, task, buttons):
    if task.filename == 'empty':
        filename = '–í—ã –Ω–µ –ø—Ä–∏–ª–æ–∂–∏–ª–∏ —Ñ–∞–π–ª–∞.'
    else:
        filename = task.filename
    send_keyboard(buttons, chat_object.from_id,
                  f'–ù–∞–∑–≤–∞–Ω–∏–µ: {task.title}\n'
                  f'–ö–∞—Ç–µ–≥–æ—Ä–∏—è {task.category}\n'
                  f'–û–ø–∏—Å–∞–Ω–∏–µ: {task.description}\n'
                  f'–°—Ä–æ–∫ –¥–æ: {task.deadline.strftime("%d.%m.%Y")}\n'
                  f'–§–∞–π–ª: {filename}\n'
                  f'–¶–µ–Ω–∞: {task.cost}')


def en_send_his_project(chat_object, task, buttons):
    if task.filename == 'empty':
        filename = 'You do not attach file.'
    else:
        filename = task.filename
    deadline = task.deadline.strftime("%d.%m.%Y")
    send_keyboard(buttons, chat_object.from_id,
                  f'Name: {task.title}\n'
                  f'Category {task.category}\n'
                  f'Description: {task.description}\n'
                  f'Deadline: {deadline}\n'
                  f'File: {filename}\n'
                  f'Cost: {task.cost}')


def ru_check_input_withdraw(sum_withdraw, name_bank, phone=False, card=False):
    if phone is not False:
        return f'–°—É–º–º–∞ {sum_withdraw}\n–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞ {name_bank}\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ {phone}'
    elif card is not False:
        return f'–°—É–º–º–∞ {sum_withdraw}\n–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞ {name_bank}\n–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã {card}'


def en_check_input_withdraw(sum_withdraw, name_bank, phone=False, card=False):
    if phone is not False:
        return f'Sum {sum_withdraw}\nName of bank {name_bank}\nPhone number {phone}'
    elif card is not False:
        return f'Sum {sum_withdraw}\nName of bank {name_bank}\nCard number {card}'


def ru_send_user_about_balance(chat_object):
    send_message(f'–ö–∞—Ä—Ç–∞ —Ö—É—è—Ä—Ç–∞ —Ä–∞–∑: {chat_object.from_id}\n'
                 f'–ö–∞—Ä—Ç–∞ —Ö—É—è—Ä—Ç–∞ –¥–≤–∞: {chat_object.username}\n'
                 f'–ú–Ω–µ –≤–ø–∞–¥–ª—É –¥—É–º–∞—Ç—å –∑–∞ —Ç–µ–±—è –¥—É–º–∞–π —á—Ç–æ —Ç—É—Ç –ø–∏—Å–∞—Ç—å –∏ –ø—Ä–æ–¥—É–º—ã–≤–∞–π', chat_object.from_id)


def en_send_user_about_balance(chat_object):
    send_message(f'–ö–∞—Ä—Ç–∞ —Ö—É—è—Ä—Ç–∞ first: {chat_object.from_id}\n'
                 f'–ö–∞—Ä—Ç–∞ —Ö—É—è—Ä—Ç–∞ second: {chat_object.username}\n'
                 f'–ú–Ω–µ –≤–ø–∞–¥–ª—É –¥—É–º–∞—Ç—å –∑–∞ —Ç–µ–±—è –¥—É–º–∞–π —á—Ç–æ —Ç—É—Ç –ø–∏—Å–∞—Ç—å –∏ –ø—Ä–æ–¥—É–º—ã–≤–∞–π', chat_object.from_id)


def ru_send_user_profile(chat_object, user):
    send_message(f'–í–∞—à telegram ID: {chat_object.from_id}\n'
                 f'–ù–∏–∫–Ω–µ–π–º –≤ telegram: {chat_object.username}\n'
                 f'–ò–º—è: {user.fullname}\n'
                 f'E-Mail: {user.email}\n'
                 f'–í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã: Projects::DoesNotExists\n'
                 f'–ü—Ä–æ–µ–∫—Ç—ã –≤ —Ä–∞–±–æ—Ç–µ: UserProjects::DoesNotExists\n'
                 f'–£—Ä–æ–≤–µ–Ω—å –∑–∞–∫–∞–∑—á–∏–∫–∞: func_payer::DoesNotExists\n'
                 f'–£—Ä–æ–≤–µ–Ω—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è: func_worker::DoesNotExists\n'
                 f'–í–∞—à –±–∞–ª–∞–Ω—Å: 0 —Ä—É–±–ª–µ–π', chat_object.from_id)


def en_send_user_profile(chat_object, user):
    send_message(f'Your telegram ID: {chat_object.from_id}\n'
                 f'Username –≤ telegram: {chat_object.username}\n'
                 f'Name: {user.fullname}\n'
                 f'E-Mail: {user.email}\n'
                 f'Completed projects: Projects::DoesNotExists\n'
                 f'Projects in progress: UserProjects::DoesNotExists\n'
                 f'Executor Level: func_payer::DoesNotExists\n'
                 f'Customer Level: func_worker::DoesNotExists\n'
                 f'Your balance: 0 rub', chat_object.from_id)


def ru_send_please_phone_or_chard_num(chat_object):
    send_message('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç—ã –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤', chat_object.from_id)


def en_send_please_phone_or_chard_num(chat_object):
    send_message('Enter your phone or bank card number without spaces', chat_object.from_id)


def ru_send_please_bank_nam(chat_object):
    send_message('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞ –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–µ—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏', chat_object.from_id)


def en_send_please_bank_nam(chat_object):
    send_message('Enter the name of the bank to which you want to withdraw money', chat_object.from_id)


def ru_send_help_message(chat_object):
    send_message("–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂—É t.me/apacheL9 –∏ –∏–∑–ª–æ–∂–∏—Ç–µ –∏–º —Å–≤–æ—é –ø—Ä–æ–±–ª–µ–º—É.\n"
                 "–û–∂–∏–¥–∞–Ω–∏–µ –º–æ–∂–µ—Ç —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å –æ—Ç 5 –º–∏–Ω—É—Ç –¥–æ 1 —á–∞—Å–∞.", chat_object.from_id)


def en_send_help_message(chat_object):
    send_message("Contact with technical support t.me/apacheL9 and tell them your problem.\n"
                 "The wait can range from 5 minutes to 1 hour.", chat_object.from_id)


def ru_send_offer_to_customer(customer_id, name_of_project):
    send_message(f"–ù–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, {name_of_project}.", customer_id)


def en_send_offer_to_customer(customer_id, name_of_project):
    send_message(f"New offer, {name_of_project}.", customer_id)


message_completed_projects = {
    "ru": '–°–ø–∏—Å–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤.',
    "en": 'List of completed projects.'
}

message_processing_projects = {
    "ru": '–°–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤ –≤ —Ä–∞–±–æ—Ç–µ.',
    "en": 'List of processing projects.'
}

def ru_send_empty_list(chat_object):
    send_message("–ü—É—Å—Ç–æ.", chat_object.from_id)


def en_send_empty_list(chat_object):
    send_message("Empty.", chat_object.from_id)


# Common responses (success or error)
def ru_success_message(chat_object):
    send_message("–£—Å–ø–µ—à–Ω–æ.", chat_object.from_id)


def en_success_message(chat_object):
    send_message("Success.", chat_object.from_id)


def ru_error_message(chat_object, msg):
    send_message(f"–û—à–∏–±–∫–∞, {msg}", chat_object.from_id)


def en_error_message(chat_object, msg):
    send_message(f"Error, {msg}", chat_object.from_id)
